<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:greenhouse="http://www.springsource.com/schema/greenhouse"	
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springsource.com/schema/greenhouse http://www.springsource.com/schema/greenhouse/greenhouse-1.0.xsd">

	<http use-expressions="true">
		<!-- Authentication policy -->
		<form-login login-page="/signin" login-processing-url="/signin/authenticate" authentication-failure-handler-ref="authenticationFailureHandler" />
		<logout logout-url="/signout" />
		<!-- Authorization policy -->
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/signup" access="permitAll" />
		<intercept-url pattern="/signup/fb" access="permitAll" />
		<intercept-url pattern="/signin" filters="none" method="GET" />
		<intercept-url pattern="/signin/fb" access="permitAll" method="POST" />
		<intercept-url pattern="/reset" access="permitAll" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/members/**" access="permitAll" />
		<intercept-url pattern="/groups/**" access="permitAll" />
		<intercept-url pattern="/pubsub/**" access="permitAll" />
		<intercept-url pattern="/**" access="isAuthenticated()" />
	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="usernamePasswordAuthenticationProvider" />
	</authentication-manager>

	<beans:bean id="usernamePasswordAuthenticationProvider" class="com.springsource.greenhouse.account.UsernamePasswordAuthenticationProvider" />

	<beans:bean id="authenticationFailureHandler" class="com.springsource.greenhouse.signin.RedirectingAuthenticationFailureHandler" />

	<beans:bean class="com.springsource.greenhouse.account.AccountMapper">
		<beans:constructor-arg value="${application.url}/members/{profileKey}" />		
	</beans:bean>
	
	<beans:bean id="accountRepository" class="com.springsource.greenhouse.account.JdbcAccountRepository" />
	
	<greenhouse:environment-bean id="passwordEncoder">
		<greenhouse:when environment="embedded">
			<beans:bean class="org.springframework.security.encrypt.NoOpPasswordEncoder" factory-method="getInstance" />
		</greenhouse:when>
		<greenhouse:otherwise>
			<beans:bean class="org.springframework.security.encrypt.StandardPasswordEncoder">
				<beans:constructor-arg value="${security.encryptPassword}" />
			</beans:bean>
		</greenhouse:otherwise>
	</greenhouse:environment-bean>

	<greenhouse:environment-bean id="stringEncryptor">
		<greenhouse:when environment="embedded">
			<beans:bean class="org.springframework.security.encrypt.NoOpStringEncryptor" factory-method="getInstance" />
		</greenhouse:when>
		<greenhouse:otherwise>
			<beans:bean class="org.springframework.security.encrypt.SearchableStringEncryptor">
				<beans:constructor-arg value="${security.encryptPassword}" />
				<beans:constructor-arg value="${security.encryptSalt}" />
			</beans:bean>
		</greenhouse:otherwise>
	</greenhouse:environment-bean>
		
	<beans:import resource="security-oauth-provider.xml" />
	
	<beans:import resource="security-oauth-consumer.xml" />
    
</beans:beans>