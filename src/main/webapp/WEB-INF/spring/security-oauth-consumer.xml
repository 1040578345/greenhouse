<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:social="http://www.springframework.org/schema/spring-social"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/spring-social http://www.springframework.org/schema/social/spring-social-1.0.xsd">
	
	<!-- Exposes ServiceProvider APIs as request-scoped beans -->
	<bean class="com.springsource.greenhouse.config.ServiceProvidersApiConfiguration" />

				
	<!-- Configure a connection repository through which account-to-provider connections will be stored --> 
	<bean id="connectionRepository" class="org.springframework.social.connect.jdbc.JdbcConnectionRepository">
		<constructor-arg ref="dataSource" />
		<constructor-arg>
			<bean class="org.springframework.security.crypto.encrypt.Encryptors" factory-method="noOpText" />
		</constructor-arg>
	</bean>

	<!-- Configure a Twitter service provider -->
	<social:service-provider class="org.springframework.social.twitter.connect.TwitterServiceProvider" 
							 app-key="${twitter.clientKey}" 
							 app-secret="${twitter.clientSecret}" />
			
	<!-- Configure a Facebook service provider -->
	<social:service-provider id="facebookProvider"
							 class="org.springframework.social.facebook.connect.FacebookServiceProvider"
							 app-key="${facebook.clientKey}" 
							 app-secret="${facebook.clientSecret}" />

	<!-- Configure a LinkedIn service provider -->
	<social:service-provider class="org.springframework.social.linkedin.connect.LinkedInServiceProvider" 
							 app-key="${linkedin.clientKey}" 
							 app-secret="${linkedin.clientSecret}" />

	<!-- Configure a TripIt service provider -->
	<social:service-provider class="org.springframework.social.tripit.connect.TripItServiceProvider" 
							 app-key="${tripit.clientKey}" 
							 app-secret="${tripit.clientSecret}" />
							 
</beans>